initSidebarItems({"fn":[["copy_buf","Copy data between a `BufRead` and a `Write` without an intermediate buffer."],["set_drop_err_handler","Set a thread-local handler for errors thrown in `BufWriter`'s `Drop` impl."]],"macro":[["do_read","Shorthand for `return DoRead(bool)` or `return DoRead(true)` (empty invocation)"],["flush_amt","Shorthand for `return FlushAmt(n)` or `return FlushAmt(0)` (empty invocation)"]],"mod":[["policy","Types which can be used to tune the behavior of `BufReader` and `BufWriter`."]],"struct":[["BufReader","A drop-in replacement for `std::io::BufReader` with more functionality."],["BufWriter","A drop-in replacement for `std::io::BufWriter` with more functionality."],["Buffer","A deque-like datastructure for managing bytes."],["IntoInnerError","The error type for `BufWriter::into_inner()`, contains the `BufWriter` as well as the error that occurred."],["LineWriter","A drop-in replacement for `std::io::LineWriter` with more functionality."],["Unbuffer","A `Read` adapter for a consumed `BufReader` which will empty bytes from the buffer before reading from `R` directly. Frees the buffer when it has been emptied."]]});